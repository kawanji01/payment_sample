<!-- Stripe elementsのExample 4 と、https://qiita.com/tomokazu0112/items/89f69c47761ac782ce13 を組み合わせたフォーム-->
<!-- example 4： https://stripe.dev/elements-examples/ -->

<div class="cell example example4" id="example-4">
  <%= form_with model: customer, local: true, id: 'payment-form' do %>
    <form class="mx-auto">
      <div id="example4-paymentRequest">
        <!--Stripe paymentRequestButton Element inserted here-->
      </div>

      <fieldset>
        <legend class="card-only" data-tid="elements_examples.form.pay_with_card">カードを登録</legend>
        <legend class="payment-request-available" data-tid="elements_examples.form.enter_card_manually">Or enter card
          details
        </legend>
        <div class="container">

          <div id="example4-card">
            <!-- Stripe Element がここに入ります。 -->
          </div>
          <button type="submit" data-tid="elements_examples.form.donate_button" class="font-weight-bold">登録する</button>
        </div>
      </fieldset>

      <!-- Element のエラーを入れます。 -->
      <div id="card-errors" role="alert"></div>
    </form>
  <% end %>


</div>

<script src="https://js.stripe.com/v3"></script>
<script>
    (function () {
        "use strict";

        var stripe = Stripe('<%= Rails&.configuration&.stripe[:publishable_key] %>');
        var elements = stripe.elements({
            fonts: [
                {
                    cssSrc: "https://rsms.me/inter/inter.css"
                }

            ],
            // Stripe's examples are localized to specific languages, but if
            // you wish to have Elements automatically detect your user's locale,
            // use `locale: 'auto'` instead.
            locale: 'auto'
        });

        /**
         * Card Element
         */
        var card = elements.create("card", {
            style: {
                base: {
                    color: "#32325D",
                    fontWeight: 500,
                    fontFamily: "Inter, Open Sans, Segoe UI, sans-serif",
                    fontSize: "16px",
                    fontSmoothing: "antialiased",

                    "::placeholder": {
                        color: "#CFD7DF"
                    }
                },
                invalid: {
                    color: "#E25950"
                },

            },
            // 郵便番号の入力を取り除く / https://stripe.com/docs/js/elements_object/create_element?type=card#elements_create-options-hidePostalCode
            hidePostalCode: true,

        });

        card.mount("#example4-card");


        // stripeTokenを送信するための処理 / https://qiita.com/tomokazu0112/items/89f69c47761ac782ce13

        // Handle real-time validation errors from the card Element.
        // バリデーションエラーの表示
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        // submitボタンが押されたときに、stripeTokenを作成する。
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        // stripeTokenをhiddenFieldに格納してサーバーサイドに送信する。
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }

    })();
</script>